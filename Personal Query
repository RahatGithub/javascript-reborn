➤ What is NodeJS?
* Node JS is a Javascript runtime environment which allows us to run Javascript out of a web browser. 
* It is open-source and cross-platform. 
* Open source হওয়ায় এটা transparent, কেউ চাইলে এখানে contribute করতে পারে 
* Cross platform হওয়ায় এটা বিভিন্ন environment/operating system এ কাজ করে এবং এটি দিয়ে তৈরি প্রোগ্রামও বিভিন্ন operating system এ কাজ করে 
 
➤ What is NPM?? 
* NPM stands for Node Package Manager 
* It is a package manager for javascript specially designed for use with Node.js environment  

➤ Why is NPM needed? How does NPM work?
… 

➤ What do I need to run Javascript on my machine? 
* A code editor or IDE(Integrated Development Environment) 
* Node.js installed 
* NPM (comes with Node.js) 

➤ What is Type Coercion? 
* Type Coercion refers to the changing of datatype of a variable by the compiler 
* Coercion অর্থ ‘জবরদস্তি’। Type Coercion মানে কোনো এক variable এর data type জবরদস্তি পরিবর্তন করে দেয়া যাতে প্রোগ্রামটি error না দেয় 

➤ slice vs substring 
* slice() and substring() both are string methods 
* উভয় মেথডই দুটো parameter নিতে পারে - start, end 
* slice()-এ start এর value end থেকে বড় হলে এটা empty string return করে 
* substring()-এ start এর value end থেকে বড় হলে এটা values swap করে ফেলে অর্থাৎ, start-কে end আর end-কে start ধরে নেয় 

➤ x=Array(10) আর x=[10] এর মধ্যে পার্থক্য কি? 
* সাধারণত x=Array(num1,num2,num3) এবং x=[num1,num2,num3] উভয়ভাবেই array declare করা যায় 
* তবে শুধুমাত্র একটা element থাকলে সবসময় x=[num1] এইভাবে declare করতে হবে 
* x=Array(10) মানে এমন একটা array যার length ১০ 
* আর x=[10] মানে এমন একটা array যার length ১ এবং value 10  

➤ arr.push(x) আর arr.pop() কি return করে? 
* arr.pop() popped element return করে 
* arr.push(x) arr এর নতুন length return করে 

➤ slice() vs splice() 
* slice() নতুন একটি array return করে এবং পুরাতন array অক্ষত থাকে 
* splice() existing array-এর মধ্যেই operation করে সেটা পরিবর্তন করে দেয়
* splice() কিছু return করে না   

➤ sort() ও reverse() দিয়ে numbers sorting করতে গেলে কি সমস্যা? 
* sort() ও reverse() শুধু string sort করার জন্য 
* [205,1250,420,35] এই array sort করতে দিলে sorted array হবে [1250,205,35,420] কারণ JS compiler প্রতিটা array element কে string আকারে নিয়ে compare করে 
* এর সমাধান: 
    * arr.sort(function(a,b){return a-b}) // ascending order  
    * arr.sort(function(a,b){return b-a}) // descending order  

➤ What is callback function? 
* callback function is a function that is passed through another function as argument 

➤ map() and flatMap() 
* both uses callback functions 
* both creates new array as the result 
* map() keeps the dimension of the result array same as the main array 
* flatMap() always make the dimension 1xN. Basically it flattens the result array  

➤ Array declared with 'let' vs array declared with 'const': 
* Arrays declared with 'let' are mutable but arrays declared with 'const' are immutable 
* When declared with 'let', the whole array can be reassigned but if declared with 'const' then it may be modified but not be fully changed or reassigned the whole array 

➤ for/in loop vs for/of loop 
* for/in loop iterates through the variables or keys of an object 
* for/of loop iterates through the values of an iterable object 
* Example 1: 
    let arr = [2,5,11,27,36]
    for(let x in arr){
        //here x is the index, iteratively: 0 1 2 3 4
    }
    for(let x of arr){
        //here x is the value, iteratively: 2 5 11 27 36
    } 
* Example 2: 
    let std = {name: "John Doe", reg: "257896", batch: "25th"}
    for(let x in std){
        //x is iteratively: name reg batch
    }
    for(let x of std){
        //error: std is not iterable 
    }